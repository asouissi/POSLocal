--select groupe.grocode, groupe.grointitule from groupe inner join utilisateur on utilisateur.grocode = groupe.grocode where utilisateur.uticode = 'DEALERJD';



SET SERVEROUTPUT ON

DECLARE
	PROCEDURE P_CREATE_DEALER( P_UTICODE UTILISATEUR.UTICODE%TYPE,
							  P_GROCODE GROUPE.GROCODE%TYPE,
							  P_UTICODEORIGINE UTILISATEUR.UTICODE%TYPE
	) AS
		sGROCODEORIGINE GROUPE.GROCODE%TYPE := NULL;
	BEGIN
		SELECT GROCODE INTO sGROCODEORIGINE FROM UTILISATEUR WHERE UTICODE = P_UTICODEORIGINE;
		
		DBMS_OUTPUT.PUT_LINE( 'Creating user ' || P_UTICODE || ' with group ' || P_GROCODE );
		DBMS_OUTPUT.PUT_LINE( 'From user ' || P_UTICODEORIGINE || ' (group=' || sGROCODEORIGINE || ')' );
		
		If P_GROCODE <> sGROCODEORIGINE Then
			Insert into GROUPE (GROCODE, GROINTITULE) Values ( P_GROCODE, P_GROCODE );

			Insert into  LKGROTMFDROIT  (TMOMODULE, TMFFONCTION, GROCODE, GFDCREER, GFDMODIFIER, GFDSUPPRIMER, GFDVOIR) 
			select TMOMODULE, TMFFONCTION, P_GROCODE, GFDCREER, GFDMODIFIER, GFDSUPPRIMER, GFDVOIR from lkgrotmfdroit where grocode = sGROCODEORIGINE;

			Insert into  LKGROTACAGE (ACTID, TACCODE, GROCODE) 
			select ACTID, TACCODE, P_GROCODE from LKGROTACAGE where  grocode = sGROCODEORIGINE;
		END IF;
		
		BEGIN
			Insert into  TSECTEURMETIER   (TSMSECTGESTION, TSMMETIER) Values  ('LEA', 'DEALER');
		EXCEPTION
			WHEN OTHERS THEN
				DBMS_OUTPUT.PUT_LINE( 'Error insertion in TSECTEURMETIER : ' || SQLERRM );
		END;		
		
		BEGIN
			Insert INTO TUSPARAM  (TUSNOM, TUPCODE) values ('METIER',  'DEALER');
			Insert INTO LANTUSPARAM  (TUSNOM, TUPCODE, LANCODE, TUPLIBELLE) VALUES  ('METIER', 'DEALER', 'EN', 'Dealer');
		EXCEPTION
			WHEN OTHERS THEN
				DBMS_OUTPUT.PUT_LINE( 'Ignore error insertion in LANTUSPARAM : ' || SQLERRM );
		END;

		BEGIN
			INSERT INTO FILTREPARAMPROFIL (TPGCODE, FPPNOM,FPPTYPE,FPPCODE)
			SELECT TPGCODE, FPPNOM, FPPTYPE,P_GROCODE FROM FILTREPARAMPROFIL WHERE FPPCODE IN ( sGROCODEORIGINE );
		EXCEPTION
			WHEN OTHERS THEN
				DBMS_OUTPUT.PUT_LINE( 'Ignore error insertion in FILTREPARAMPROFIL : ' || SQLERRM );
		END;

		BEGIN
			insert into relationvaleurprofil ( reccode, tpgcode, revmerecode, revfillecode , REVFLAGDEFAUT)
			select reccode, tpgcode, revmerecode, P_GROCODE , revflagdefaut from relationvaleurprofil where  revfillecode = sGROCODEORIGINE;
		EXCEPTION
			WHEN OTHERS THEN
				DBMS_OUTPUT.PUT_LINE( 'Ignore error insertion in RELATIONVALEURPROFIL : ' || SQLERRM );
		END;

		INSERT into UTILISATEUR  (UTICODE   , UGECODE , GROCODE  , UTINOM   , UTIPRENOM, UTIFLAGPASSWORD, UTIDTUPD    , UTIWHODUNNIT, UTIPWD, UTIPWDDTCHGD, UTILOCKED, UTIATTEMPTS, UTIFLAGPERMANENT) 
		Values                   ( P_UTICODE, '_ORIG_', P_GROCODE, P_UTICODE, P_UTICODE, 0              , current_date, ''          , ''    , current_date, 'N'      , 0          , 1               );

		INSERT INTO UTITSM ( UTICODE, TSMSECTGESTION, TSMMETIER, TSMFLAGSUPERVISEUR,TSMFLAGDEFAUT ) VALUES ( P_UTICODE, 'LEA', 'DEALER', NULL, NULL);

		INSERT INTO AVUTIDROITACCES ( UTICODE, UDACODE, UDABOOLEAN ) SELECT P_UTICODE, UDACODE, UDABOOLEAN FROM AVUTIDROITACCES WHERE UTICODE = P_UTICODEORIGINE;

		INSERT INTO RELATIONVALEURPROFIL (RECCODE, TPGCODE, revmerecode, REVFILLECODE, REVFLAGDEFAUT)
		SELECT RECCODE, TPGCODE, P_UTICODE, REVFILLECODE, REVFLAGDEFAUT FROM RELATIONVALEURPROFIL WHERE REVMERECODE = P_UTICODEORIGINE;

		INSERT INTO FILTREPARAMPROFIL (SELECT TPGCODE, FPPTYPE, FPPNOM, P_UTICODE, FPPFLAGDEFAUT FROM FILTREPARAMPROFIL WHERE FPPCODE = P_UTICODEORIGINE);

		INSERT INTO FILTREPARAMETRE (SELECT FIPTYPE, FIPNOM, P_UTICODE, '_ORIG_'  FROM FILTREPARAMETRE WHERE FIPCODE = P_UTICODEORIGINE) ;

		BEGIN
			P_MD5_UTIPWD( P_UTICODE, P_UTICODE );

			UPDATE	UTILISATEUR
			SET UTIFLAGPASSWORD = 0,
				UTIPWDDTCHGD = SYSDATE,
				UTIDTUPD = SYSDATE,
				UTIATTEMPTS = 0,
				UTILOCKTIME = NULL,
				UTILOCKED = 'N'
			WHERE	UTICODE = P_UTICODE ;
		 EXCEPTION 
			WHEN OTHERS THEN 
				DBMS_OUTPUT.PUT_LINE( SQLERRM );
		END; 
	END P_CREATE_DEALER;
BEGIN	
	-- (user)
	P_CREATE_DEALER( /*username*/ 'DEALERVW', /*group, create if not existing*/ 'BROKER1', /*user to replicate*/ 'DEALER1' );
--	P_CREATE_DEALER( 'DEALER2', 'BROKER2', 'DEALER1' );
--	P_CREATE_DEALER( 'FLEETMANAGER1', 'FLMANAG', 'DEALER1' );
END;
/
